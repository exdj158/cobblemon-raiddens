package com.necro.raid.dens.fabricgen.datagen;

import com.cobblemon.mod.common.CobblemonItems;
import com.necro.raid.dens.common.CobblemonRaidDens;
import com.necro.raid.dens.common.items.ModItems;
import com.necro.raid.dens.common.items.ModPredicates;
import com.necro.raid.dens.common.items.RaidTypePredicate;
import com.necro.raid.dens.common.raids.RaidType;
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.SimpleFabricLootTableProvider;
import net.minecraft.advancements.critereon.*;
import net.minecraft.core.HolderLookup;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.storage.loot.LootContext;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.NestedLootTable;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
import net.minecraft.world.level.storage.loot.predicates.LootItemEntityPropertyCondition;
import net.minecraft.world.level.storage.loot.providers.number.*;

import java.util.concurrent.CompletableFuture;
import java.util.function.BiConsumer;

public class LootTableGenerator extends SimpleFabricLootTableProvider {
    public LootTableGenerator(FabricDataOutput output, CompletableFuture<HolderLookup.Provider> registryLookup) {
        super(output, registryLookup, LootContextParamSets.CHEST);
    }

    @Override
    public void generate(BiConsumer<ResourceKey<LootTable>, LootTable.Builder> consumer) {
        consumer.accept(
            createKey("raids/types/gems"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                        LootContext.EntityTarget.THIS,
                        EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                            .mainhand(ItemPredicate.Builder.item()
                                .of(ModItems.RAID_POUCH.value())
                                .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.NORMAL))
                            ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.NORMAL_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.FIGHTING))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.FIGHTING_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.FLYING))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.FLYING_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.POISON))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.POISON_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.GROUND))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GROUND_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.ROCK))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ROCK_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.BUG))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BUG_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.GHOST))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GHOST_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.STEEL))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.STEEL_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.FIRE))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.FIRE_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.WATER))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WATER_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.GRASS))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GRASS_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.ELECTRIC))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ELECTRIC_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.PSYCHIC))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PSYCHIC_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.ICE))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ICE_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.DRAGON))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.DRAGON_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.DARK))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.DARK_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
                .pool(LootPool.lootPool().setRolls(ConstantValue.exactly(1f))
                    .conditionally(LootItemEntityPropertyCondition.hasProperties(
                            LootContext.EntityTarget.THIS,
                            EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
                                .mainhand(ItemPredicate.Builder.item()
                                    .of(ModItems.RAID_POUCH.value())
                                    .withSubPredicate(ModPredicates.ITEM_TYPE_PREDICATE.value(), RaidTypePredicate.ofType(RaidType.FAIRY))
                                ).build()))
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.FAIRY_GEM)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .build())
                    .build())
        );

        consumer.accept(
            createKey("raids/features/mega"),
            new LootTable.Builder()
        );

        consumer.accept(
            createKey("raids/features/tera"),
            new LootTable.Builder()
        );

        consumer.accept(
            createKey("raids/features/dynamax"),
            new LootTable.Builder()
        );

        consumer.accept(
            createKey("raids/tiers/tier_one"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(2f, 4f))
                    .with(LootItem.lootTableItem(CobblemonItems.RED_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.YELLOW_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLACK_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MEDICINAL_LEEK)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.VIVICHOKE_SEEDS)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.IRON_NUGGET)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.STICK)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 4f)))
                        .setWeight(5)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_two"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(3f, 6f))
                    .with(LootItem.lootTableItem(CobblemonItems.RED_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.YELLOW_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLACK_APRICORN)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.IRON_NUGGET)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_NUGGET)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.STICK)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.YELLOW_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLACK_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_APRICORN_SEED)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_XS)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_S)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(5)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_three"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(3f, 6f))
                    .with(LootItem.lootTableItem(Items.IRON_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_INGOT)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_S)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_M)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.HEALTH_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MUSCLE_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RESIST_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GENIUS_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CLEVER_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.SWIFT_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(NestedLootTable.lootTableReference(createKey("raids/types/gems"))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_four"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(4f, 6f))
                    .with(LootItem.lootTableItem(Items.IRON_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.DIAMOND)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(1)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_M)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_L)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.HEALTH_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MUSCLE_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RESIST_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GENIUS_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CLEVER_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.SWIFT_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 3f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_CAPSULE)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(1)
                        .build())
                    .with(NestedLootTable.lootTableReference(createKey("raids/types/gems"))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(10)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_five"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(4f, 8f))
                    .with(LootItem.lootTableItem(Items.IRON_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.DIAMOND)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_L)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_XL)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.HEALTH_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MUSCLE_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RESIST_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GENIUS_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CLEVER_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.SWIFT_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_CAPSULE)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(NestedLootTable.lootTableReference(createKey("raids/types/gems"))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(10)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_six"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(6f, 8f))
                    .with(LootItem.lootTableItem(Items.IRON_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(Items.DIAMOND)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_L)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_XL)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RARE_CANDY)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.HEALTH_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MUSCLE_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RESIST_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GENIUS_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CLEVER_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.SWIFT_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_CAPSULE)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_PATCH)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(2)
                        .build())
                    .with(NestedLootTable.lootTableReference(createKey("raids/types/gems"))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(10)
                        .build())
                .build()
            )
        );

        consumer.accept(
            createKey("raids/tiers/tier_seven"),
            new LootTable.Builder()
                .pool(LootPool.lootPool().setRolls(UniformGenerator.between(8f, 10f))
                    .with(LootItem.lootTableItem(Items.IRON_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(Items.COPPER_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(Items.GOLD_INGOT)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(Items.DIAMOND)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(Items.NETHERITE_SCRAP)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(2)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_L)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.EXPERIENCE_CANDY_XL)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 6f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RARE_CANDY)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1f, 2f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.HEALTH_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.MUSCLE_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RESIST_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GENIUS_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CLEVER_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.SWIFT_FEATHER)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(4f, 8f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_LEAF)
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2f, 4f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.RED_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.BLUE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.CYAN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.GREEN_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.PINK_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.WHITE_MINT_SEEDS)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_CAPSULE)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(10)
                        .build())
                    .with(LootItem.lootTableItem(CobblemonItems.ABILITY_PATCH)
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1f)))
                        .setWeight(5)
                        .build())
                    .with(NestedLootTable.lootTableReference(createKey("raids/types/gems"))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2f)))
                        .setWeight(10)
                        .build())
                .build()
            )
        );
    }

    private ResourceKey<LootTable> createKey(String name) {
        return ResourceKey.create(Registries.LOOT_TABLE, ResourceLocation.fromNamespaceAndPath(CobblemonRaidDens.MOD_ID, name));
    }
}
